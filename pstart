#!/bin/sh

set -eu

CONFIG_DIR="$HOME/.config/picod/user"
STATE_DIR="$HOME/.local/picod"
MULTI_USER="$CONFIG_DIR/multi-user.target.wants"
mkdir -p "$CONFIG_DIR" "$STATE_DIR"

# some environments don't have pgrep
pgrep(){
	process="$1"

	ps -ef | grep "$process" | awk '{print $2}'
}

init(){
	for service in "$MULTI_USER"/*; do
		service="$(echo "$service"  | sed 's/.*\///g; s/\.service//g')"
		picoctl start "$service"
	done
}

# get_field FIELD SERVICE
get_field(){
	field="$1"
	service="$2"
	awk -F'=' '/'"$field"'=/ { print $2 }' "$CONFIG_DIR/$service.service"
}

stop(){
	service="$1"

	cmd="$(get_field ExecStop "$service")"

	if [ -z "$cmd" ]; then
		pid="$(cat "$STATE_DIR/$service")"
		rm "$STATE_DIR/$service"

		kill -15 "$pid"
	else
		# otherwise execute the stop command
		$cmd
	fi
}

start(){
	service="$1"

	# if service is already running, do nothing
	[ -f "$STATE_DIR/$service" ] && return

	cmd="$(get_field ExecStart "$service")"
	$cmd >> "$STATE_DIR/$service.log" 2>&1 &
	echo "$!" > "$STATE_DIR/$service"
}

status(){
	service="$1"

	cmd="$(get_field ExecStart "$service")"

	description="$(get_field Description "$service")"
	
	pid="$(cat "$STATE_DIR/$service" 2>/dev/null || true)"

	if [ -z "$pid" ] || ! ps -p "$pid" >/dev/null; then
		active="inactive (dead)"
		echo -e "● $service.service - $description"
	else
		active="active (running)"
		echo -e "\e[32m●\e[39m $service.service - $description"
	fi

	echo "Active: $active"
	echo "Process: $pid $cmd"
	echo
	tail -n 5 "$STATE_DIR/$service.log"

}

enable() {
	service="$1"

	ln -sv "$CONFIG_DIR/$service.service" "$CONFIG_DIR/multi-user.target.wants/$service.service"
}

disable(){
	service="$1"

	rm -v "$CONFIG_DIR/multi-user.target.wants/$service.service"
}


help(){
	cat << 'EOF'
usage: picoctl {command}

  status  shows status of service
  start   starts the service
  stop    stops the service

EOF
}

action="$1"
service="$2"

case "$action" in
	disable) disable "$service" ;;
	enable) enable "$service" ;;
	init) init ;;
	restart) stop "$service"; start "$service" ;;
	start) start "$service" ;;
	status) status "$service" ;;
	stop) stop "$service" ;;
	*) help ;;
esac

